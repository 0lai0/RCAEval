[Regex]
ID = "[a-z0-9]{24}"
CustomerID = "[A-Za-z0-9]{26,34}"

[EventTemplate]
E00 = "<:ID:>"
E0 = "nan"
E1 = "Sent cookies."
E2 = "GET /catalogue 200 <*> - -"
E3 = "GET Request to: <*>/cards"
E4 = "GET Request to: <*>/addresses"
E5 = "POST to carts: <*>/items body: {<*>}"
E6 = "POST /cart 201 <*> - -"
E547='POST /cart 500 <*> - <*>'
E7 = "POST /cards 200 <*> - -"
E8 = "POST /register 200 <*> - 33"
E801="POST /register 500 <*> - -"
E9 = "POST /addresses 200 <*> - -"
E10= "POST /orders 201 <*> - -"
E111='POST /orders 406 <*> - -'
E101="POST /orders 500 <*> - -"
E102="POST /orders 503 <*> - -"
E103='POST /orders 500 <*> - 171'
E11= "DELETE /cart 202 <*> - -"
E12= 'DELETE /cart 500 <*> - -'
E120='DELETE /cart 503 <*> - -'
E13= 'GET /favicon.ico 404 <*> - 142'
E14= 'GET /catalogue?size=<*> 200 <*> - -'
E15= 'GET /cart 200 <*> - -'
E16= 'POST /orders 406 <*> - -'


E31 = 'Attempting to add to cart: {"id": "<*>", "quantity": "<*>"}'
E32 = 'Attempting to delete cart for user: <*>'
E33 = 'Carts merged.'
E34 = 'Merging carts for customer id: <*> and session id: <*>'
E35 = 'Order response: {"id": "<*>", "customerId": "<*>", "customer": {"id": "<*>", "firstName": "<*>", "lastName": "<*>", "username": "<*>", "addresses": [], "cards": []}, "address": {"id": "<*>", "number": "<*>", "street": "<*>", "city": "<*>", "postcode": "<*>", "country": "<*>"}, "card": {"id": "<*>", "longNum": "<*>", "expires": "<*>", "ccv": "<*>"}, "items": [{"id": "<*>", "itemId": "<*>", "quantity": "<*>", "unitPrice": "<*>"}], "shipment": {"id": "<*>", "name": "<*>"}, "date": "<*>", "total": "<*>"}'
E36 = 'Order response: {"statusCode": "<*>", "body": {"id": "<*>", "customerId": "<*>", "customer": {"id": "<*>", "firstName": "<*>", "lastName": "<*>", "username": "<*>", "addresses": [], "cards": []}, "address": {"id": "<*>", "number": "<*>", "street": "<*>", "city": "<*>", "postcode": "<*>", "country": "<*>"}, "card": {"id": "<*>", "longNum": "<*>", "expires": "<*>", "ccv": "<*>"}, "items": [{"id": "<*>", "itemId": "<*>", "quantity": "<*>", "unitPrice": "<*>"}], "shipment": {"id": "<*>", "name": "<*>"}, "date": "<*>", "total": "<*>"}, "headers": {"x-application-context": "<*>", "content-type": "<*>", "date": "<*>", "x-envoy-upstream-service-time": "<*>", "server": "<*>", "connection": "<*>", "transfer-encoding": "<*>"}, "request": {"uri": {"protocol": "<*>", "slashes": "<*>", "auth": "<*>", "host": "<*>", "port": "<*>", "hostname": "<*>", "hash": "<*>", "search": "<*>", "query": "<*>", "pathname": "<*>", "path": "<*>", "href": "<*>"}, "method": "<*>", "headers": {"accept": "<*>", "content-type": "<*>", "content-length": "<*>"}}}'
E366= 'Order response: {"statusCode": "<*>", "body": {"timestamp": "<*>", "status": "<*>", "error": "<*>", "exception": "<*>", "message": "<*>", "path": "<*>"}, "headers": {"x-application-context": "<*>", "content-type": "<*>", "date": "<*>", "x-envoy-upstream-service-time": "<*>", "server": "<*>", "connection": "<*>", "transfer-encoding": "<*>"}, "request": {"uri": {"protocol": "<*>", "slashes": "<*>", "auth": "<*>", "host": "<*>", "port": "<*>", "hostname": "<*>", "hash": "<*>", "search": "<*>", "query": "<*>", "pathname": "<*>", "path": "<*>", "href": "<*>"}, "method": "<*>", "headers": {"accept": "<*>", "content-type": "<*>", "content-length": "<*>"}}}'
E367= 'Order response: {"timestamp": "<*>", "status": "<*>", "error": "<*>", "exception": "<*>", "message": "<*>", "path": "<*>"}'
E368= 'Order response: "upstream connect error or disconnect/reset before headers. reset reason: remote connection failure, transport failure reason: delayed connect error: 111'
E369= 'Order response: {"statusCode": "<*>", "body": "<*>", "headers": {"content-length": "<*>", "content-type": "<*>", "date": "<*>", "server": "<*>", "x-envoy-upstream-service-time": "<*>", "connection": "<*>"}, "request": {"uri": {"protocol": "<*>", "slashes": "<*>", "auth": "<*>", "host": "<*>", "port": "<*>", "hostname": "<*>", "hash": "<*>", "search": "<*>", "query": "<*>", "pathname": "<*>", "path": "<*>", "href": "<*>"}, "method": "<*>", "headers": {"accept": "<*>", "content-type": "<*>", "content-length": "<*>"}}}'
E370= 'Order response: {"id": "<*>", "customerId": "<*>", "customer": {"id": "<*>", "firstName": "<*>", "lastName": "<*>", "username": "<*>", "addresses": [], "cards": []}, "address": {"id": "<*>", "number": "<*>", "street": "<*>", "city": "<*>", "postcode": "<*>", "country": "<*>"}, "card": {"id": "<*>", "longNum": "<*>", "expires": "<*>", "ccv": "<*>"}, "items": [], "shipment": {"id": "<*>", "name": "<*>"}, "date": "<*>", "total": "<*>"}'
E371= 'Order response: {"statusCode": "<*>", "body": {"id": "<*>", "customerId": "<*>", "customer": {"id": "<*>", "firstName": "<*>", "lastName": "<*>", "username": "<*>", "addresses": [], "cards": []}, "address": {"id": "<*>", "number": "<*>", "street": "<*>", "city": "<*>", "postcode": "<*>", "country": "<*>"}, "card": {"id": "<*>", "longNum": "<*>", "expires": "<*>", "ccv": "<*>"}, "items": [], "shipment": {"id": "<*>", "name": "<*>"}, "date": "<*>", "total": "<*>"}, "headers": {"x-application-context": "<*>", "content-type": "<*>", "date": "<*>", "x-envoy-upstream-service-time": "<*>", "server": "<*>", "connection": "<*>", "transfer-encoding": "<*>"}, "request": {"uri": {"protocol": "<*>", "slashes": "<*>", "auth": "<*>", "host": "<*>", "port": "<*>", "hostname": "<*>", "hash": "<*>", "search": "<*>", "query": "<*>", "pathname": "<*>", "path": "<*>", "href": "<*>"}, "method": "<*>", "headers": {"accept": "<*>", "content-type": "<*>", "content-length": "<*>"}}}'
E372= 'Order response: {"statusCode": "<*>", "body": "<*>", "headers": {"content-length": "<*>", "content-type": "<*>", "date": "<*>", "server": "<*>", "connection": "<*>"}, "request": {"uri": {"protocol": "<*>", "slashes": "<*>", "auth": "<*>", "host": "<*>", "port": "<*>", "hostname": "<*>", "hash": "<*>", "search": "<*>", "query": "<*>", "pathname": "<*>", "path": "<*>", "href": "<*>"}, "method": "<*>", "headers": {"accept": "<*>", "content-type": "<*>", "content-length": "<*>"}}}'
E373= 'Order response: "no healthy upstream'

E37 = '"id": "<*>", "number": "<*>", "street": "<*>", "city": "<*>", "postcode": "<*>", "country": "<*>"}, "card": {"id": "<*>", "longNum": "<*>", "expires": "<*>", "ccv": "<*>"}, "items": [{"id": "<*>", "itemId": "<*>", "quantity": "<*>", "unitPrice": "<*>"}], "shipment": {"id": "<*>", "name": "<*>"}, "date": "<*>", "total": "<*>"}'
E38 = 'Posting Address: {"number": "<*>", "street": "<*>", "city": "<*>", "postcode": "<*>", "country": "<*>", "userID": "<*>"}'
E39 = 'Posting Card: {"longNum": "<*>", "expires": "<*>", "ccv": "<*>", "userID": "<*>"}'
E40 = 'Posting Order: {"customer": "<*>", "address": "<*>", "card": "<*>", "items": "<*>"}'
E41 = 'User cart deleted with status: <*>'
E42 = 'Posting Customer: {"username": "<*>", "password": "<*>", "email": "<*>", "firstName": "<*>", "lastName": "<*>"}'

E50 = 'Received response: "{"_embedded": {"address": [{"street": "<*>", "number": "<*>", "country": "<*>", "city": "<*>", "postcode": "<*>", "id": "<*>", "_links": {"address": {"href": "<*>"}, "self": {"href": "<*>"}}}]}}'
E50A= 'Received response: "{"_embedded": {"address": [{"street": "<*>", "number": "<*>", "country": "<*>", "city": "<*>", "postcode": "<*>", "id": "<*>", "_links": "<*>"}]}}'
E548= 'Received response: "{"_embedded": {"address": []}}'
E51 = 'Received response: "{"_embedded": {"card": [{"longNum": "<*>", "expires": "<*>", "ccv": "<*>", "id": "<*>", "_links": {"card": {"href": "<*>"}, "self": {"href": "<*>"}}}]}}'
E553= 'Received response: "{"_embedded": {"card": []}}'
E52 = 'Received response: "{"firstName": "<*>", "lastName": "<*>", "username": "<*>", "id": "<*>", "_links": {"addresses": {"href": "<*>"}, "cards": {"href": "<*>"}, "customer": {"href": "<*>"}, "self": {"href": "<*>"}}}'
E53 = 'Request received with body: {}'
E54 = 'set cookie<*>'

E70 = '{ id: "<*>" }'
E71 = '{"id": "<*>", "name": "<*>", "description": "<*>", "imageUrl": ["<*>"], "price": "<*>", "count": "<*>", "tag": ["<*>"]}'
E73 = '[ undefined, undefined ]'
E74 = '{"error": "<*>", "status_code": "<*>", "status_text": "<*>"}'
E75 = 'Customer ID: <:CustomerID:>' 
E76 = 'Request received: /cart, undefined'
E77 = 'Received response: "{"error": "<*>", "status_code": "<*>", "status_text": "<*>"}'
E78 = 'npm timing npm:load:<*> Completed in <*>'
E79 = 'npm timing config:load:<*> Completed in <*>'
E80 = 'npm verb <*>'




E500 = '> node server.js'
E501 = '> microservices-demo-front-end@0.0.1 start /usr/src/app'
E502 = 'npm info using node@v4.8.0'
E503 = 'npm info start microservices-demo-front-end@0.0.1'
E504 = 'npm info prestart microservices-demo-front-end@0.0.1'
E505 = 'npm info using npm@2.15.11'
E506 = 'npm info it worked if it ends with ok'
E507 = 'Using the redis based session manager'
E508 = 'App now running in production mode on port 8079'
E509 = 'npm ERR! This is most likely a problem with the microservices-demo-front-end package,'
E510 = 'npm ERR! argv "/usr/local/bin/node" "/usr/local/bin/npm" "start'
E511 = 'npm ERR! node v4.8.0'
E512 = 'npm ERR! npm  v2.15.11'
E513 = 'npm ERR! code ELIFECYCLE'
E514 = 'npm ERR! microservices-demo-front-end@0.0.1 start: `node server.js`'
E515 = 'npm ERR! Exit status 1'
E516 = 'npm ERR! Linux 5.15.109+'
E517 = 'npm ERR!'
E518 = 'npm ERR! Failed at the microservices-demo-front-end@0.0.1 start script "node server.js".'
E519 = 'npm ERR! not with npm itself.'
E520 = 'npm ERR! Or if that isn"t available, you can get their info via:'
E521 = 'npm ERR!     node server.js'
E522 = 'npm ERR! You can get information on how to open an issue for this project with:'
E523 = 'npm ERR!     npm bugs microservices-demo-front-end'
E524 = 'npm ERR!     npm owner ls microservices-demo-front-end'
E525 = 'npm ERR! There is likely additional logging output above.'
E526 = 'npm ERR! Please include the following file with any support request:'
E527 = 'npm ERR!     /usr/src/app/npm-debug.log'
E528 = 'npm info microservices-demo-front-end@0.0.1 Failed to exec start script'
E529 = 'npm ERR! Tell the author that this fails on your system:'
E530 = 'at Object.parse (native)'
E531 = 'at IncomingMessage.<anonymous> (<*>:<*>:<*>)'
E532 = 'upstream connect error or disconnect/reset before headers. reset reason: remote connection failure, transport failure reason: delayed connect error: 111'
E533 = 'Received response: "upstream connect error or disconnect/reset before headers. reset reason: remote connection failure, transport failure reason: delayed connect error: 111'
E534 = 'at Request.emit (<*>:<*>:<*>)'
E535 = '^'
E536 = 'at Request.<anonymous> (<*>:<*>:<*>)'
E537 = 'at Request.emit (<*>:<*>:<*>)'
E538 = 'at emitTwo (<*>:<*>:<*>)'
E539 = 'at emitOne (<*>:<*>:<*>)'
E540 = 'undefined:1'
E541 = 'at Request._callback (<*>:<*>:<*>)'
E542 = 'at IncomingMessage.g (<*>:<*>:<*>)'
E543 = 'SyntaxError: Unexpected token u'
E544 = 'at Request.self.callback (<*>:<*>:<*>)'
E545 = 'no healthy upstream'
E546 = 'SyntaxError: Unexpected token o'
E549 = 'Received response: "no healthy upstream'
E550 = 'at Request._callback (<*>:<*>:<*>)'
E551 = 'Error with log in: true'
E552 = '503'
E554 = 'npm ERR! Linux 5.15.133+'
E555 = 'at emitNone (events.js:72:20)'
E556 = 'at IncomingMessage.emit (events.js:166:7)'
E557 = 'TypeError: Cannot read property "self" of null'
